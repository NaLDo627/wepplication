# DDL 정의시 데이터베이스의 고유 기능을 사용합니다.
# ex) 테이블 생성, 삭제 등
spring.jpa.generate-ddl=true

# MySQL 을 사용할 것.
spring.jpa.database=mysql

#spring.datasource.url=jdbc:mysql://wepplication.koreacentral.cloudapp.azure.com:3306/wepplication?useUnicode=true&charaterEncoding=utf-8&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC&autoReconnect=true&useSSL=false
#spring.datasource.url=jdbc:mysql://192.168.116.100:3306/wepplication?useUnicode=true&charaterEncoding=utf-8&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC&autoReconnect=true&useSSL=false
spring.datasource.url=jdbc:mysql://parkkiho.asuscomm.com:3306/wepplication?useUnicode=true&charaterEncoding=utf-8&useJDBCCompliantTimezoneShift=true&useLegacyDatetimeCode=false&serverTimezone=UTC&autoReconnect=true&useSSL=false
spring.datasource.username=shicha
spring.datasource.password=xlatlck!#!$
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

spring.datasource.tomcat.max-active=10
spring.datasource.tomcat.initial-size=2
spring.datasource.tomcat.max-idle=2
spring.datasource.tomcat.min-idle=1
spring.datasource.tomcat.test-while-idle=true
spring.datasource.tomcat.time-between-eviction-runs-millis=3600000
spring.datasource.tomcat.min-evictable-idle-time-millis=7200000
spring.datasource.tomcat.testOnBorrow=true
spring.datasource.tomcat.validationQuery=SELECT 1

spring.jpa.database-platform=org.hibernate.dialect.MySQL5InnoDBDialect

spring.freemarker.check-template-location=false

server.port = 8081